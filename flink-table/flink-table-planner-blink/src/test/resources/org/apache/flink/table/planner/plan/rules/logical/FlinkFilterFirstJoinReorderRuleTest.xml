<?xml version="1.0" ?>
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to you under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<Root>
  <TestCase name="testInnerJoinWithOnlyOneFilter">
    <Resource name="sql">
      <![CDATA[
select * from T1, T2, T3, T4 where a1 = a2 and a1 = a3 and a3 = a4 and b3 > 10
      ]]>

    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], a2=[$3], b2=[$4], c2=[$5], a3=[$6], b3=[$7], c3=[$8], a4=[$9], b4=[$10], c4=[$11])
+- LogicalFilter(condition=[AND(=($0, $3), =($0, $6), =($6, $9), >($7, 10))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalJoin(condition=[true], joinType=[inner])
      :  :- LogicalJoin(condition=[true], joinType=[inner])
      :  :  :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1, c1)]]])
      :  :  +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
      :  +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3)]]])
      +- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4)]]])
]]>

    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalProject(a1=[$6], b1=[$7], c1=[$8], a2=[$0], b2=[$1], c2=[$2], a3=[$9], b3=[$10], c3=[$11], a4=[$3], b4=[$4], c4=[$5])
+- LogicalJoin(condition=[=($6, $0)], joinType=[inner])
   :- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
   +- LogicalJoin(condition=[=($6, $0)], joinType=[inner])
      :- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4)]]])
      +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1, c1)]]])
         +- LogicalFilter(condition=[>($1, 10)])
            +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3)]]])
]]>

    </Resource>
  </TestCase>
  <TestCase name="testInnerJoinWithoutFilter">
    <Resource name="sql">
      <![CDATA[
select * from T1, T2, T3, T4 where a1 = a2 and a1 = a3 and a3 = a4
      ]]>

    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], a2=[$3], b2=[$4], c2=[$5], a3=[$6], b3=[$7], c3=[$8], a4=[$9], b4=[$10], c4=[$11])
+- LogicalFilter(condition=[AND(=($0, $3), =($0, $6), =($6, $9))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalJoin(condition=[true], joinType=[inner])
      :  :- LogicalJoin(condition=[true], joinType=[inner])
      :  :  :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1, c1)]]])
      :  :  +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
      :  +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3)]]])
      +- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4)]]])
]]>

    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalProject(a1=[$6], b1=[$7], c1=[$8], a2=[$9], b2=[$10], c2=[$11], a3=[$3], b3=[$4], c3=[$5], a4=[$0], b4=[$1], c4=[$2])
+- LogicalJoin(condition=[=($3, $0)], joinType=[inner])
   :- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4)]]])
   +- LogicalJoin(condition=[=($3, $0)], joinType=[inner])
      :- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3)]]])
      +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1, c1)]]])
         +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
]]>

    </Resource>
  </TestCase>
  <TestCase name="testInnerJoinWithTwoFilterWithDiffSelectivity1">
    <Resource name="sql">
      <![CDATA[
select * from T1, T2, T3, T4 where a1 = a2 and a1 = a3 and a3 = a4 and b1 > 10 and b4 = 5
      ]]>

    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], a2=[$3], b2=[$4], c2=[$5], a3=[$6], b3=[$7], c3=[$8], a4=[$9], b4=[$10], c4=[$11])
+- LogicalFilter(condition=[AND(=($0, $3), =($0, $6), =($6, $9), >($1, 10), =($10, 5))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalJoin(condition=[true], joinType=[inner])
      :  :- LogicalJoin(condition=[true], joinType=[inner])
      :  :  :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1, c1)]]])
      :  :  +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
      :  +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3)]]])
      +- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4)]]])
]]>

    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalProject(a1=[$6], b1=[$7], c1=[$8], a2=[$9], b2=[$10], c2=[$11], a3=[$0], b3=[$1], c3=[$2], a4=[$3], b4=[$4], c4=[$5])
+- LogicalJoin(condition=[=($6, $0)], joinType=[inner])
   :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3)]]])
   :  +- LogicalFilter(condition=[=($1, 5)])
   :     +- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4)]]])
   +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
      :- LogicalFilter(condition=[>($1, 10)])
      :  +- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1, c1)]]])
      +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
]]>

    </Resource>
  </TestCase>
  <TestCase name="testInnerJoinWithTwoFilterWithDiffSelectivity2">
    <Resource name="sql">
      <![CDATA[
select * from T1, T2, T3, T4 where a1 = a2 and a1 = a3 and a1 = a4 and b3 > 10 and b4 = 5
      ]]>

    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], a2=[$3], b2=[$4], c2=[$5], a3=[$6], b3=[$7], c3=[$8], a4=[$9], b4=[$10], c4=[$11])
+- LogicalFilter(condition=[AND(=($0, $3), =($0, $6), =($0, $9), >($7, 10), =($10, 5))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalJoin(condition=[true], joinType=[inner])
      :  :- LogicalJoin(condition=[true], joinType=[inner])
      :  :  :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1, c1)]]])
      :  :  +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
      :  +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3)]]])
      +- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4)]]])
]]>

    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalProject(a1=[$6], b1=[$7], c1=[$8], a2=[$0], b2=[$1], c2=[$2], a3=[$3], b3=[$4], c3=[$5], a4=[$9], b4=[$10], c4=[$11])
+- LogicalJoin(condition=[=($6, $0)], joinType=[inner])
   :- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
   +- LogicalJoin(condition=[=($3, $0)], joinType=[inner])
      :- LogicalFilter(condition=[>($1, 10)])
      :  +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3)]]])
      +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1, c1)]]])
         +- LogicalFilter(condition=[=($1, 5)])
            +- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4)]]])
]]>

    </Resource>
  </TestCase>
  <TestCase name="testInnerJoinWithTwoFilterWithDiffSelectivity3">
    <Resource name="sql">
      <![CDATA[
select * from T1, T2, T3, T4, T5 where
    a1 = a3 and a1 = a4 and a2 = a5 and c2 = c1 and b3 > 10 and b4 = 5
      ]]>

    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], a2=[$3], b2=[$4], c2=[$5], a3=[$6], b3=[$7], c3=[$8], a4=[$9], b4=[$10], c4=[$11], a5=[$12], b5=[$13], c5=[$14])
+- LogicalFilter(condition=[AND(=($0, $6), =($0, $9), =($3, $12), =($5, $2), >($7, 10), =($10, 5))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalJoin(condition=[true], joinType=[inner])
      :  :- LogicalJoin(condition=[true], joinType=[inner])
      :  :  :- LogicalJoin(condition=[true], joinType=[inner])
      :  :  :  :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1, c1)]]])
      :  :  :  +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
      :  :  +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3)]]])
      :  +- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4)]]])
      +- LogicalTableScan(table=[[default_catalog, default_database, T5, source: [TestTableSource(a5, b5, c5)]]])
]]>

    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalProject(a1=[$9], b1=[$10], c1=[$11], a2=[$3], b2=[$4], c2=[$5], a3=[$6], b3=[$7], c3=[$8], a4=[$12], b4=[$13], c4=[$14], a5=[$0], b5=[$1], c5=[$2])
+- LogicalJoin(condition=[=($3, $0)], joinType=[inner])
   :- LogicalTableScan(table=[[default_catalog, default_database, T5, source: [TestTableSource(a5, b5, c5)]]])
   +- LogicalJoin(condition=[=($2, $8)], joinType=[inner])
      :- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
      +- LogicalJoin(condition=[=($3, $0)], joinType=[inner])
         :- LogicalFilter(condition=[>($1, 10)])
         :  +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3)]]])
         +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1, c1)]]])
            +- LogicalFilter(condition=[=($1, 5)])
               +- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4)]]])
]]>

    </Resource>
  </TestCase>
  <TestCase name="testOnlyRightJoin">
    <Resource name="sql">
      <![CDATA[
select * from T1 right join T2 on a1 = a2
      ]]>

    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], a2=[$3], b2=[$4], c2=[$5])
+- LogicalJoin(condition=[=($0, $3)], joinType=[right])
   :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1, c1)]]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
]]>

    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalJoin(condition=[=($0, $3)], joinType=[right])
:- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1, c1)]]])
+- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
]]>

    </Resource>
  </TestCase>
  <TestCase name="testInnerJoinWithTwoFilterWithSameSelectivity1">
    <Resource name="sql">
      <![CDATA[
select * from T1, T2, T3, T4 where a1 = a2 and a1 = a3 and a3 = a4 and b3 > 10 and b2 < 5
      ]]>

    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], a2=[$3], b2=[$4], c2=[$5], a3=[$6], b3=[$7], c3=[$8], a4=[$9], b4=[$10], c4=[$11])
+- LogicalFilter(condition=[AND(=($0, $3), =($0, $6), =($6, $9), >($7, 10), <($4, 5))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalJoin(condition=[true], joinType=[inner])
      :  :- LogicalJoin(condition=[true], joinType=[inner])
      :  :  :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1, c1)]]])
      :  :  +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
      :  +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3)]]])
      +- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4)]]])
]]>

    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalProject(a1=[$6], b1=[$7], c1=[$8], a2=[$9], b2=[$10], c2=[$11], a3=[$3], b3=[$4], c3=[$5], a4=[$0], b4=[$1], c4=[$2])
+- LogicalJoin(condition=[=($3, $0)], joinType=[inner])
   :- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4)]]])
   +- LogicalJoin(condition=[=($3, $0)], joinType=[inner])
      :- LogicalFilter(condition=[>($1, 10)])
      :  +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3)]]])
      +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1, c1)]]])
         +- LogicalFilter(condition=[<($1, 5)])
            +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
]]>

    </Resource>
  </TestCase>
  <TestCase name="testInnerJoinWithTwoFilterWithSameSelectivity2">
    <Resource name="sql">
      <![CDATA[
select * from T1, T2, T3, T4 where a1 = a2 and a2 = a3 and a3 = a4 and b4 > 10 and b1 < 5
      ]]>

    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], a2=[$3], b2=[$4], c2=[$5], a3=[$6], b3=[$7], c3=[$8], a4=[$9], b4=[$10], c4=[$11])
+- LogicalFilter(condition=[AND(=($0, $3), =($3, $6), =($6, $9), >($10, 10), <($1, 5))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalJoin(condition=[true], joinType=[inner])
      :  :- LogicalJoin(condition=[true], joinType=[inner])
      :  :  :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1, c1)]]])
      :  :  +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
      :  +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3)]]])
      +- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4)]]])
]]>

    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalJoin(condition=[=($3, $6)], joinType=[inner])
:- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
:  :- LogicalFilter(condition=[<($1, 5)])
:  :  +- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1, c1)]]])
:  +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
+- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3)]]])
   +- LogicalFilter(condition=[>($1, 10)])
      +- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4)]]])
]]>

    </Resource>
  </TestCase>
  <TestCase name="testInnerJoinWithTwoFilterWithSameSelectivity3">
    <Resource name="sql">
      <![CDATA[
select * from T1, T2, T3, T4 where a1 = a2 and a1 = a3 and a3 = a4 and b3 > 10 and b1 < 5
      ]]>

    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], a2=[$3], b2=[$4], c2=[$5], a3=[$6], b3=[$7], c3=[$8], a4=[$9], b4=[$10], c4=[$11])
+- LogicalFilter(condition=[AND(=($0, $3), =($0, $6), =($6, $9), >($7, 10), <($1, 5))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalJoin(condition=[true], joinType=[inner])
      :  :- LogicalJoin(condition=[true], joinType=[inner])
      :  :  :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1, c1)]]])
      :  :  +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
      :  +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3)]]])
      +- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4)]]])
]]>

    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalProject(a1=[$6], b1=[$7], c1=[$8], a2=[$3], b2=[$4], c2=[$5], a3=[$9], b3=[$10], c3=[$11], a4=[$0], b4=[$1], c4=[$2])
+- LogicalJoin(condition=[=($9, $0)], joinType=[inner])
   :- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4)]]])
   +- LogicalJoin(condition=[=($3, $0)], joinType=[inner])
      :- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
      +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :- LogicalFilter(condition=[<($1, 5)])
         :  +- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1, c1)]]])
         +- LogicalFilter(condition=[>($1, 10)])
            +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3)]]])
]]>

    </Resource>
  </TestCase>
  <TestCase name="testInnerJoinWithTwoFilterWithSameSelectivity4">
    <Resource name="sql">
      <![CDATA[
select * from T1, T2, T3, T4 where a1 = a2 and a1 = a3 and a1 = a4 and b4 > 10 and b3 < 5
      ]]>

    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], a2=[$3], b2=[$4], c2=[$5], a3=[$6], b3=[$7], c3=[$8], a4=[$9], b4=[$10], c4=[$11])
+- LogicalFilter(condition=[AND(=($0, $3), =($0, $6), =($0, $9), >($10, 10), <($7, 5))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalJoin(condition=[true], joinType=[inner])
      :  :- LogicalJoin(condition=[true], joinType=[inner])
      :  :  :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1, c1)]]])
      :  :  +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
      :  +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3)]]])
      +- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4)]]])
]]>

    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalProject(a1=[$6], b1=[$7], c1=[$8], a2=[$0], b2=[$1], c2=[$2], a3=[$9], b3=[$10], c3=[$11], a4=[$3], b4=[$4], c4=[$5])
+- LogicalJoin(condition=[=($6, $0)], joinType=[inner])
   :- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
   +- LogicalJoin(condition=[=($3, $0)], joinType=[inner])
      :- LogicalFilter(condition=[>($1, 10)])
      :  +- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4)]]])
      +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
         :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1, c1)]]])
         +- LogicalFilter(condition=[<($1, 5)])
            +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3)]]])
]]>

    </Resource>
  </TestCase>
  <TestCase name="testInnerJoinWithTwoFilterWithSameSelectivity5">
    <Resource name="sql">
      <![CDATA[
select * from T1, T2, T3, T4, T5 where
   b1 = b2 and a2 = a3 and c3 = c5 and b4 > 10 and b3 < 5
      ]]>

    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], a2=[$3], b2=[$4], c2=[$5], a3=[$6], b3=[$7], c3=[$8], a4=[$9], b4=[$10], c4=[$11], a5=[$12], b5=[$13], c5=[$14])
+- LogicalFilter(condition=[AND(=($1, $4), =($3, $6), =($8, $14), >($10, 10), <($7, 5))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalJoin(condition=[true], joinType=[inner])
      :  :- LogicalJoin(condition=[true], joinType=[inner])
      :  :  :- LogicalJoin(condition=[true], joinType=[inner])
      :  :  :  :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1, c1)]]])
      :  :  :  +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
      :  :  +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3)]]])
      :  +- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4)]]])
      +- LogicalTableScan(table=[[default_catalog, default_database, T5, source: [TestTableSource(a5, b5, c5)]]])
]]>

    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalProject(a1=[$3], b1=[$4], c1=[$5], a2=[$9], b2=[$10], c2=[$11], a3=[$12], b3=[$13], c3=[$14], a4=[$0], b4=[$1], c4=[$2], a5=[$6], b5=[$7], c5=[$8])
+- LogicalJoin(condition=[true], joinType=[inner])
   :- LogicalFilter(condition=[>($1, 10)])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4)]]])
   +- LogicalJoin(condition=[=($1, $7)], joinType=[inner])
      :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1, c1)]]])
      +- LogicalJoin(condition=[=($8, $2)], joinType=[inner])
         :- LogicalTableScan(table=[[default_catalog, default_database, T5, source: [TestTableSource(a5, b5, c5)]]])
         +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
            :- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
            +- LogicalFilter(condition=[<($1, 5)])
               +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3)]]])
]]>

    </Resource>
  </TestCase>
  <TestCase name="testLeftJoinWithoutFilter">
    <Resource name="sql">
      <![CDATA[
select * from T1
    join T2 on a1 = a2
    join T3 on a1 = a3
    left join T4 on a3 = a4 and b4 < 5
      ]]>

    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], a2=[$3], b2=[$4], c2=[$5], a3=[$6], b3=[$7], c3=[$8], a4=[$9], b4=[$10], c4=[$11])
+- LogicalJoin(condition=[AND(=($6, $9), <($10, 5))], joinType=[left])
   :- LogicalJoin(condition=[=($0, $6)], joinType=[inner])
   :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :  :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1, c1)]]])
   :  :  +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3)]]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4)]]])
]]>

    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalProject(a1=[$3], b1=[$4], c1=[$5], a2=[$6], b2=[$7], c2=[$8], a3=[$0], b3=[$1], c3=[$2], a4=[$9], b4=[$10], c4=[$11])
+- LogicalJoin(condition=[AND(=($0, $9), <($10, 5))], joinType=[left])
   :- LogicalJoin(condition=[=($3, $0)], joinType=[inner])
   :  :- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3)]]])
   :  +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :     :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1, c1)]]])
   :     +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4)]]])
]]>

    </Resource>
  </TestCase>
  <TestCase name="testOnlyFullJoin">
    <Resource name="sql">
      <![CDATA[
select * from T1 full join T2 on a1 = a2
      ]]>

    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], a2=[$3], b2=[$4], c2=[$5])
+- LogicalJoin(condition=[=($0, $3)], joinType=[full])
   :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1, c1)]]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
]]>

    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalJoin(condition=[=($0, $3)], joinType=[full])
:- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1, c1)]]])
+- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
]]>

    </Resource>
  </TestCase>
  <TestCase name="testRightJoinWithoutFilter">
    <Resource name="sql">
      <![CDATA[
select * from T1
    join T2 on a1 = a2
    join T3 on a1 = a3
    right join T4 on a3 = a4 and b4 < 5
      ]]>

    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], a2=[$3], b2=[$4], c2=[$5], a3=[$6], b3=[$7], c3=[$8], a4=[$9], b4=[$10], c4=[$11])
+- LogicalJoin(condition=[AND(=($6, $9), <($10, 5))], joinType=[right])
   :- LogicalJoin(condition=[=($0, $6)], joinType=[inner])
   :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :  :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1, c1)]]])
   :  :  +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3)]]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4)]]])
]]>

    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalJoin(condition=[AND(=($6, $9), <($10, 5))], joinType=[right])
:- LogicalProject(a1=[$3], b1=[$4], c1=[$5], a2=[$6], b2=[$7], c2=[$8], a3=[$0], b3=[$1], c3=[$2])
:  +- LogicalJoin(condition=[=($3, $0)], joinType=[inner])
:     :- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3)]]])
:     +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
:        :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1, c1)]]])
:        +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
+- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4)]]])
]]>

    </Resource>
  </TestCase>
  <TestCase name="testOnlyLeftJoin">
    <Resource name="sql">
      <![CDATA[
select * from T1 left join T2 on a1 = a2
      ]]>

    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], a2=[$3], b2=[$4], c2=[$5])
+- LogicalJoin(condition=[=($0, $3)], joinType=[left])
   :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1, c1)]]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
]]>

    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalJoin(condition=[=($0, $3)], joinType=[left])
:- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1, c1)]]])
+- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
]]>

    </Resource>
  </TestCase>
  <TestCase name="testSimpleInnerJoin">
    <Resource name="sql">
      <![CDATA[
select * from T1, T2 where a1 = a2
      ]]>

    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], a2=[$3], b2=[$4], c2=[$5])
+- LogicalFilter(condition=[=($0, $3)])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1, c1)]]])
      +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
]]>

    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalJoin(condition=[=($0, $3)], joinType=[inner])
:- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1, c1)]]])
+- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
]]>

    </Resource>
  </TestCase>
</Root>
